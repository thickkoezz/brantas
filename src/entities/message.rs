//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "message")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub owner_id: Uuid,
    #[sea_orm(primary_key, auto_increment = false)]
    pub receiver_id: Uuid,
    #[sea_orm(primary_key, auto_increment = false)]
    pub created_at: DateTime,
    pub message: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::person::Entity",
        from = "Column::OwnerId",
        to = "super::person::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Person2,
    #[sea_orm(
        belongs_to = "super::person::Entity",
        from = "Column::ReceiverId",
        to = "super::person::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Person1,
}

impl ActiveModelBehavior for ActiveModel {}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelatedEntity)]
pub enum RelatedEntity {
    #[sea_orm(entity = "super::person::Entity", def = "Relation::Person2.def()")]
    Person2,
    #[sea_orm(entity = "super::person::Entity", def = "Relation::Person1.def()")]
    Person1,
}
