//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "follow")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub follower_id: Uuid,
  #[sea_orm(primary_key, auto_increment = false)]
  pub target_id: Uuid,
  pub created_at: DateTimeWithTimeZone,
  pub deleted_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::user_account::Entity",
    from = "Column::FollowerId",
    to = "super::user_account::Column::Id",
    on_update = "Cascade",
    on_delete = "Restrict"
  )]
  Follower,
  #[sea_orm(
    belongs_to = "super::user_account::Entity",
    from = "Column::TargetId",
    to = "super::user_account::Column::Id",
    on_update = "Cascade",
    on_delete = "Restrict"
  )]
  Target,
}

impl ActiveModelBehavior for ActiveModel {}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelatedEntity)]
pub enum RelatedEntity {
  #[sea_orm(
    entity = "super::user_account::Entity",
    def = "Relation::Follower.def()"
  )]
  Follower,
  #[sea_orm(entity = "super::user_account::Entity", def = "Relation::Target.def()")]
  Target,
}
