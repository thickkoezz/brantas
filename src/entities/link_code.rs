//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "link_code")]
pub struct Model {
  pub link_id: Uuid,
  #[sea_orm(primary_key, auto_increment = false)]
  pub code: String,
  pub created_at: DateTimeWithTimeZone,
  pub expired_at: Option<DateTimeWithTimeZone>,
  pub is_public: bool,
  pub is_code_manually_typed: bool,
  pub deleted_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::link::Entity",
    from = "Column::LinkId",
    to = "super::link::Column::Id",
    on_update = "Cascade",
    on_delete = "Cascade"
  )]
  Link,
}

impl Related<super::link::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Link.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelatedEntity)]
pub enum RelatedEntity {
  #[sea_orm(entity = "super::link::Entity")]
  Link,
}
